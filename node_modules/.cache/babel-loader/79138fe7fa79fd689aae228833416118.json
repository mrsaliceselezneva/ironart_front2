{"ast":null,"code":"var _jsxFileName = \"/home/ironart/ironart_front/src/components/ModerQuestion/ModerQuestion.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport \"./ModerQuestion.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModerQuestion() {\n  _s();\n\n  const [lists, setLists] = React.useState(null);\n  React.useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/questions`).then(response => {\n      setLists(response.data);\n    });\n  }, []);\n\n  function createList(listName) {\n    axios.post(`${process.env.REACT_APP_API_URL}/questions`, {\n      name: listName\n    }).then(response => {\n      setLists(response.data);\n    });\n  }\n\n  if (!lists) return null;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"one\",\n    children: [lists.map(list => {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: list.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\u0418\\u043C\\u044F \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430\",\n      onChange: event => setListName(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"floating-button\",\n      onClick: () => createList(ListName),\n      children: \"Create List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModerQuestion, \"aWSwMRE760OgkMFVP2YZpyNm3rQ=\");\n\n_c = ModerQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModerQuestion\");","map":{"version":3,"sources":["/home/ironart/ironart_front/src/components/ModerQuestion/ModerQuestion.js"],"names":["axios","React","ModerQuestion","lists","setLists","useState","useEffect","get","process","env","REACT_APP_API_URL","then","response","data","createList","listName","post","name","map","list","title","event","setListName","target","value","ListName"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,KAAK,CAACI,QAAN,CAAe,IAAf,CAA1B;AAEAJ,EAAAA,KAAK,CAACK,SAAN,CAAgB,MAAM;AACpBN,IAAAA,KAAK,CAACO,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YAA3C,EAAwDC,IAAxD,CAA8DC,QAAD,IAAc;AACzER,MAAAA,QAAQ,CAACQ,QAAQ,CAACC,IAAV,CAAR;AACD,KAFD;AAGD,GAJD,EAIG,EAJH;;AAMA,WAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC5Bf,IAAAA,KAAK,CACFgB,IADH,CACS,GAAER,OAAO,CAACC,GAAR,CAAYC,iBAAkB,YADzC,EACsD;AAClDO,MAAAA,IAAI,EAAEF;AAD4C,KADtD,EAIGJ,IAJH,CAISC,QAAD,IAAc;AAClBR,MAAAA,QAAQ,CAACQ,QAAQ,CAACC,IAAV,CAAR;AACD,KANH;AAOD;;AAED,MAAI,CAACV,KAAL,EAAY,OAAO,IAAP;AACZ,sBACE;AAAO,IAAA,SAAS,EAAC,KAAjB;AAAA,eACGA,KAAK,CAACe,GAAN,CAAWC,IAAD,IAAU;AACnB,0BAAO;AAAA,kBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA,CADH,eAKE;AACE,MAAA,WAAW,EAAC,yDADd;AAEE,MAAA,QAAQ,EAAGC,KAAD,IAAWC,WAAW,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd;AAFlC;AAAA;AAAA;AAAA;AAAA,YALF,eAUE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAMV,UAAU,CAACW,QAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GApCuBvB,a;;KAAAA,a","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport \"./ModerQuestion.css\";\n\nexport default function ModerQuestion() {\n  const [lists, setLists] = React.useState(null);\n\n  React.useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/questions`).then((response) => {\n      setLists(response.data);\n    });\n  }, []);\n\n  function createList(listName) {\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/questions`, {\n        name: listName,\n      })\n      .then((response) => {\n        setLists(response.data);\n      });\n  }\n\n  if (!lists) return null;\n  return (\n    <table className=\"one\">\n      {lists.map((list) => {\n        return <td>{list.title}</td>;\n      })}\n\n      <input\n        placeholder=\"Имя списка\"\n        onChange={(event) => setListName(event.target.value)}\n      />\n\n      <button className=\"floating-button\" onClick={() => createList(ListName)}>\n        Create List\n      </button>\n    </table>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}