{"ast":null,"code":"var _jsxFileName = \"/home/ironart/ironart_front/src/components/Card/Card.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport enterList from \"./DragEnerList\";\nimport \"./Card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(_ref) {\n  _s();\n\n  let {\n    listId\n  } = _ref;\n  const [cards, setCards] = React.useState(null);\n  const [CardTitle, setCardTitle] = React.useState(null);\n  React.useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/questions/${listId}/cards`).then(response => {\n      setCards(response.data);\n    });\n  }, [listId]);\n\n  function createCard(CardTitle, newListId) {\n    axios.post(`${process.env.REACT_APP_API_URL}/tables/${tableId}/lists/${newListId}/cards`, {\n      title: CardTitle,\n      list_id: newListId\n    }).then(response => {\n      setCards(response.data);\n    });\n  }\n\n  function deleteCard(cardId) {\n    axios.delete(`${process.env.REACT_APP_API_URL}/tables/${tableId}/lists/${listId}/cards/${cardId}`).then(() => {\n      setCards(cards.filter(card => card.id !== cardId));\n    }).catch(error => {\n      console.log({ ...error\n      });\n    });\n  }\n\n  function updateCard(cardId, title) {\n    axios.put(`${process.env.REACT_APP_API_URL}/tables/${tableId}/lists/${listId}/cards/${cardId}`, {\n      title\n    }).then(response => {\n      setCards(response.data);\n    });\n  }\n\n  function dragStartHandler(event, card, listId) {}\n\n  function dragEndHandler(event, card, cards) {\n    event.preventDefault();\n\n    if (listId !== enterList[enterList.length - 1]) {\n      createCard(card.title, enterList[enterList.length - 1]);\n      deleteCard(card.id);\n    }\n  }\n\n  function dragOverHandler(event, card) {\n    event.preventDefault();\n  }\n\n  function dragEnterHandler(event, listId) {\n    enterList.push(listId);\n  }\n\n  if (!cards) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDragEnter: event => dragEnterHandler(event, listId),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\u0418\\u043C\\u044F \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438\",\n      onChange: event => setCardTitle(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pressed-button\",\n      onClick: () => createCard(CardTitle, listId),\n      children: \"Create Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list1a\",\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n          onDragStart: event => dragStartHandler(event, card, listId),\n          onDragEnd: event => dragEndHandler(event, card, cards),\n          onDragOver: event => dragOverHandler(event, card),\n          draggable: true,\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: card.title,\n              onChange: event => {\n                const updateCards = cards.reduce((prevCards, updatedCards) => {\n                  if (updatedCards.id !== card.id) {\n                    return [...prevCards, updatedCards];\n                  }\n\n                  const updatedCard = { ...updatedCards,\n                    title: event.target.value\n                  };\n                  return [...prevCards, updatedCard];\n                }, []);\n                setCards(updateCards);\n              },\n              onBlur: () => updateCard(card.id, card.title)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"pressed-button\",\n              onClick: () => deleteCard(card.id),\n              children: \"Delete Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"UPaIAs3licj70BwbMGGphMlqWuM=\");\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/ironart/ironart_front/src/components/Card/Card.js"],"names":["axios","React","enterList","Card","listId","cards","setCards","useState","CardTitle","setCardTitle","useEffect","get","process","env","REACT_APP_API_URL","then","response","data","createCard","newListId","post","tableId","title","list_id","deleteCard","cardId","delete","filter","card","id","catch","error","console","log","updateCard","put","dragStartHandler","event","dragEndHandler","preventDefault","length","dragOverHandler","dragEnterHandler","push","target","value","map","updateCards","reduce","prevCards","updatedCards","updatedCard"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport enterList from \"./DragEnerList\";\nimport \"./Card.css\";\n\nexport default function Card({ listId }) {\n  const [cards, setCards] = React.useState(null);\n  const [CardTitle, setCardTitle] = React.useState(null);\n\n  React.useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/questions/${listId}/cards`)\n      .then((response) => {\n        setCards(response.data);\n      });\n  }, [listId]);\n\n  function createCard(CardTitle, newListId) {\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/tables/${tableId}/lists/${newListId}/cards`,\n        {\n          title: CardTitle,\n          list_id: newListId,\n        }\n      )\n      .then((response) => {\n        setCards(response.data);\n      });\n  }\n\n  function deleteCard(cardId) {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/tables/${tableId}/lists/${listId}/cards/${cardId}`\n      )\n      .then(() => {\n        setCards(cards.filter((card) => card.id !== cardId));\n      })\n      .catch((error) => {\n        console.log({ ...error });\n      });\n  }\n\n  function updateCard(cardId, title) {\n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/tables/${tableId}/lists/${listId}/cards/${cardId}`,\n        {\n          title,\n        }\n      )\n      .then((response) => {\n        setCards(response.data);\n      });\n  }\n\n  function dragStartHandler(event, card, listId) {}\n\n  function dragEndHandler(event, card, cards) {\n    event.preventDefault();\n    if (listId !== enterList[enterList.length - 1]) {\n      createCard(card.title, enterList[enterList.length - 1]);\n      deleteCard(card.id);\n    }\n  }\n\n  function dragOverHandler(event, card) {\n    event.preventDefault();\n  }\n\n  function dragEnterHandler(event, listId) {\n    enterList.push(listId);\n  }\n\n  if (!cards) return null;\n\n  return (\n    <div onDragEnter={(event) => dragEnterHandler(event, listId)}>\n      <input\n        placeholder=\"Имя карточки\"\n        onChange={(event) => setCardTitle(event.target.value)}\n      />\n\n      <button\n        className=\"pressed-button\"\n        onClick={() => createCard(CardTitle, listId)}\n      >\n        Create Card\n      </button>\n      <div>\n        <ul className=\"list1a\">\n          {cards.map((card) => (\n            <div\n              onDragStart={(event) => dragStartHandler(event, card, listId)}\n              onDragEnd={(event) => dragEndHandler(event, card, cards)}\n              onDragOver={(event) => dragOverHandler(event, card)}\n              draggable={true}\n            >\n              <li>\n                <input\n                  value={card.title}\n                  onChange={(event) => {\n                    const updateCards = cards.reduce(\n                      (prevCards, updatedCards) => {\n                        if (updatedCards.id !== card.id) {\n                          return [...prevCards, updatedCards];\n                        }\n\n                        const updatedCard = {\n                          ...updatedCards,\n                          title: event.target.value,\n                        };\n                        return [...prevCards, updatedCard];\n                      },\n                      []\n                    );\n                    setCards(updateCards);\n                  }}\n                  onBlur={() => updateCard(card.id, card.title)}\n                />\n                <button\n                  className=\"pressed-button\"\n                  onClick={() => deleteCard(card.id)}\n                >\n                  Delete Card\n                </button>\n              </li>\n            </div>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}