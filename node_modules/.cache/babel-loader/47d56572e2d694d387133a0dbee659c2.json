{"ast":null,"code":"var _jsxFileName = \"/home/ironart/ironart_front/src/pages/User.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [tables, setTable] = React.useState(null);\n  React.useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/tables`).then(response => {\n      setTable(response.data);\n    });\n  }, []);\n  if (!tables) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tables.map(table => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: table.link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Q94gHethMppmJhRI6HR1NgpzNbo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ironart/ironart_front/src/pages/User.js"],"names":["axios","React","App","tables","setTable","useState","useEffect","get","process","env","REACT_APP_API_URL","then","response","data","map","table","link"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,QAAT,IAAqBH,KAAK,CAACI,QAAN,CAAe,IAAf,CAA3B;AAEAJ,EAAAA,KAAK,CAACK,SAAN,CAAgB,MAAM;AACpBN,IAAAA,KAAK,CAACO,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,SAA3C,EAAqDC,IAArD,CAA2DC,QAAD,IAAc;AACtER,MAAAA,QAAQ,CAACQ,QAAQ,CAACC,IAAV,CAAR;AACD,KAFD;AAGD,GAJD,EAIG,EAJH;AAMA,MAAI,CAACV,MAAL,EAAa,OAAO,IAAP;AACb,sBACE;AAAA,cACGA,MAAM,CAACW,GAAP,CAAYC,KAAD,iBACV;AAAA,gBAAIA,KAAK,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAjBuBd,G;;KAAAA,G","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\n\nexport default function App() {\n  const [tables, setTable] = React.useState(null);\n\n  React.useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/tables`).then((response) => {\n      setTable(response.data);\n    });\n  }, []);\n\n  if (!tables) return null;\n  return (\n    <div>\n      {tables.map((table) => (\n        <p>{table.link}</p>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}